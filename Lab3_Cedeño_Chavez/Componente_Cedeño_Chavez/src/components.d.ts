/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { OptionInterface } from "./components/select/select";
export { OptionInterface } from "./components/select/select";
export namespace Components {
    interface CustomButton {
        "color": string;
    }
    interface CustomInput {
    }
    interface CustomSelect {
        "label": string;
        "options": Array<OptionInterface>;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface MyPerfil {
    }
    interface MyProduct {
    }
    interface MyTable {
    }
}
declare global {
    interface HTMLCustomButtonElement extends Components.CustomButton, HTMLStencilElement {
    }
    var HTMLCustomButtonElement: {
        prototype: HTMLCustomButtonElement;
        new (): HTMLCustomButtonElement;
    };
    interface HTMLCustomInputElement extends Components.CustomInput, HTMLStencilElement {
    }
    var HTMLCustomInputElement: {
        prototype: HTMLCustomInputElement;
        new (): HTMLCustomInputElement;
    };
    interface HTMLCustomSelectElement extends Components.CustomSelect, HTMLStencilElement {
    }
    var HTMLCustomSelectElement: {
        prototype: HTMLCustomSelectElement;
        new (): HTMLCustomSelectElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLMyPerfilElement extends Components.MyPerfil, HTMLStencilElement {
    }
    var HTMLMyPerfilElement: {
        prototype: HTMLMyPerfilElement;
        new (): HTMLMyPerfilElement;
    };
    interface HTMLMyProductElement extends Components.MyProduct, HTMLStencilElement {
    }
    var HTMLMyProductElement: {
        prototype: HTMLMyProductElement;
        new (): HTMLMyProductElement;
    };
    interface HTMLMyTableElement extends Components.MyTable, HTMLStencilElement {
    }
    var HTMLMyTableElement: {
        prototype: HTMLMyTableElement;
        new (): HTMLMyTableElement;
    };
    interface HTMLElementTagNameMap {
        "custom-button": HTMLCustomButtonElement;
        "custom-input": HTMLCustomInputElement;
        "custom-select": HTMLCustomSelectElement;
        "my-component": HTMLMyComponentElement;
        "my-perfil": HTMLMyPerfilElement;
        "my-product": HTMLMyProductElement;
        "my-table": HTMLMyTableElement;
    }
}
declare namespace LocalJSX {
    interface CustomButton {
        "color"?: string;
    }
    interface CustomInput {
    }
    interface CustomSelect {
        "label"?: string;
        "options"?: Array<OptionInterface>;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface MyPerfil {
    }
    interface MyProduct {
    }
    interface MyTable {
    }
    interface IntrinsicElements {
        "custom-button": CustomButton;
        "custom-input": CustomInput;
        "custom-select": CustomSelect;
        "my-component": MyComponent;
        "my-perfil": MyPerfil;
        "my-product": MyProduct;
        "my-table": MyTable;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "custom-button": LocalJSX.CustomButton & JSXBase.HTMLAttributes<HTMLCustomButtonElement>;
            "custom-input": LocalJSX.CustomInput & JSXBase.HTMLAttributes<HTMLCustomInputElement>;
            "custom-select": LocalJSX.CustomSelect & JSXBase.HTMLAttributes<HTMLCustomSelectElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "my-perfil": LocalJSX.MyPerfil & JSXBase.HTMLAttributes<HTMLMyPerfilElement>;
            "my-product": LocalJSX.MyProduct & JSXBase.HTMLAttributes<HTMLMyProductElement>;
            "my-table": LocalJSX.MyTable & JSXBase.HTMLAttributes<HTMLMyTableElement>;
        }
    }
}
